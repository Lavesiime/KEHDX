// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Menu Control Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 2 : TYPE_MENUCONTROL

private alias object.value0 : menuControl.fadeValue
private alias object.value1 : menuControl.scrollDelayUp
private alias object.value2 : menuControl.scrollDelayDown
private alias object.value3 : menuControl.currentSelection
private alias object.value4 : menuControl.soundTestCooldown

private alias object.value0 : hexNo.number
private alias object.value1 : hexNo.highlighted

private alias 0 : STATE_INIT
private alias 1 : STATE_FADEIN
private alias 2 : STATE_MAIN
private alias 3 : STATE_LOADLEVEL
private alias 4 : STATE_LOADSPECIAL

// Function declarations


// Static Values
public value MenuControl_value1 = 0;
public value MenuControl_value2 = 0;
public value MenuControl_value3 = 0;
public value MenuControl_value4 = 0;
public value MenuControl_value5 = 0;
public value MenuControl_value6 = 0;

private alias BGAnimation_value0 : BGAnimation_currentPreview
private alias MenuControl_value1 : MenuControl_optionsMenuCounter
private alias MenuControl_value2 : MenuControl_optionsMenuOpen
private alias MenuControl_value3 : MenuControl_debugModeCounter
private alias MenuControl_value4 : MenuControl_emeraldCodeCounter
private alias MenuControl_value5 : MenuControl_continueCodeCounter
private alias MenuControl_value6 : MenuControl_PPZCodeCounter

// Tables

// Code to open the options menu
public table MenuControl_OptionsMenu
	0, 0, 0
end table

// Code to enable debug mode
public table MenuControl_SecretDebugMode
	1, 9, 9, 2, 1, 1, 2, 4
end table

// Code to give all emeralds
public table MenuControl_SecretEmeralds
	4, 1, 2, 6
end table

// Code to give 14 continues
public table MenuControl_SecretContinues
	1, 1, 2, 4
end table

// Code to replace Hidden Palace Zone with Proto Palace Zone
public table MenuControl_SecretPPZ
	3, 3, 3, 11, 16, 16, 16, 4
end table


// This table holds data for every stage with six values for every stage, 
// -> First entry is menu table the stage option is on
// -> Second is what number this one is on the list, from top to bottom
// -> Third is the active stage list the stage is on
// -> Fourth is the stage's position in the stage list
// -> Fifth is the menu entry of what is on the opposite side of this selection, like how MTZ is to the right of EHZ and vice versa
// -> Sixth is the icon the entry uses

public table MenuControl_EntryTable
	MENU_1, 0,  REGULAR_STAGE, 0, 14, 1		// Emerald Hill 1
	MENU_1, 1,  REGULAR_STAGE, 1, 17, 2	// Emerald Hill 2
	MENU_1, 2,  REGULAR_STAGE, 2, 18, 3		// Chemical Plant 1
	MENU_1, 3,  REGULAR_STAGE, 3, 19, 4		// Chemical Plant 2
	MENU_1, 4,  REGULAR_STAGE, 4, 20, 5		// Aquatic Ruin 1
	MENU_1, 5,  REGULAR_STAGE, 5, 21, 6		// Aquatic Ruin 2
	MENU_1, 6,  REGULAR_STAGE, 6, 22, 8		// Casino Night 1
	MENU_1, 7, REGULAR_STAGE, 7, 23, 9		// Casino Night 2
	MENU_1, 8, REGULAR_STAGE, 8, 24, 11	// Hill Top 1
	MENU_1, 9, REGULAR_STAGE, 9, 25, 7	// Hill Top 2
end table





event ObjectMain

	// Setup the HexNo object
	object[+1].xpos = screen.xcenter
	object[+1].xpos += 118

	switch object.state
	case STATE_INIT
		menuControl.fadeValue = 320
		SetScreenFade(0, 0, 0, menuControl.fadeValue)
		object[+1].ypos = 160
		object[+1].priority = PRIORITY_ACTIVE
		object.state++
		break

	case STATE_FADEIN
		if menuControl.fadeValue > 0
			menuControl.fadeValue -= 16
		else
			PlayMusic(0)
			object.state++
		end if
		SetScreenFade(0, 0, 0, menuControl.fadeValue)
		break

	case STATE_MAIN
		// Don't do any of this if the options menu is open
		if MenuControl_optionsMenuOpen == 0

			if inputDown.down == true

				menuControl.scrollDelayUp = 0
				menuControl.scrollDelayDown++
				if menuControl.scrollDelayDown == 1
					menuControl.currentSelection++
				end if
				menuControl.scrollDelayDown %= 12

			else

				if inputDown.up == true
					menuControl.scrollDelayDown = 0
					menuControl.scrollDelayUp++
					if menuControl.scrollDelayUp == 1
						menuControl.currentSelection--
					end if
					menuControl.scrollDelayUp %= 12
				else
					menuControl.scrollDelayUp = 0
					menuControl.scrollDelayDown = 0
				end if

			end if

			if menuControl.currentSelection > 9
				menuControl.currentSelection = 0
			end if

			if menuControl.currentSelection < 0
				menuControl.currentSelection = 9
			end if

			temp0 = menuControl.currentSelection
			temp0 *= 6
			temp0++
			GetTableValue(temp2, temp0, MenuControl_EntryTable)
			temp0 += 3
			GetTableValue(temp1, temp0, MenuControl_EntryTable)



			temp0 = menuControl.currentSelection
			temp0 *= 6
			GetTableValue(temp1, temp0, MenuControl_EntryTable)
			temp0++

			if temp1 == MENU_1
				menu2.selection = -1
				GetTableValue(menu1.selection, temp0, MenuControl_EntryTable)
			else // MENU_2
				menu1.selection = -1
				GetTableValue(menu2.selection, temp0, MenuControl_EntryTable)
			end if

			// Set the preview image to what it should be
			temp0 += 4
			GetTableValue(BGAnimation_currentPreview, temp0, MenuControl_EntryTable)

			// Player selected the option?
			if inputPress.start == true


						// Normal stage - let the player proceed
						object.state = STATE_LOADLEVEL

					end if



		

		end if
		break

	case STATE_LOADLEVEL
		if menuControl.fadeValue < 256
			music.volume -= 10
			menuControl.fadeValue += 16
			SetScreenFade(0, 0, 0, menuControl.fadeValue)
		else
			StopMusic()
			temp0 = menuControl.currentSelection
			temp0 *= 6
			temp0 += 2
			GetTableValue(temp1, temp0, MenuControl_EntryTable)
			temp0++
			GetTableValue(temp2, temp0, MenuControl_EntryTable)
			stage.activeList = temp1
			stage.listPos = temp2
			LoadStage()
			SetScreenFade(0, 0, 0, 255)
		end if
		break

	case STATE_LOADSPECIAL
		if menuControl.fadeValue < 768
			music.volume -= 10
			menuControl.fadeValue += 8
			SetScreenFade(208, 255, 224, menuControl.fadeValue)
		else
			StopMusic()
			temp0 = menuControl.currentSelection
			temp0 *= 6
			temp0 += 2
			GetTableValue(temp1, temp0, MenuControl_EntryTable)
			temp0++
			GetTableValue(temp2, temp0, MenuControl_EntryTable)
			stage.activeList = temp1
			stage.listPos = temp2
			LoadStage()
			SetScreenFade(208, 255, 224, 255)
		end if
		break

	end switch

end event


event ObjectDraw

	temp0 = screen.xcenter
temp0 += 60
	DrawMenu(MENU_1, temp0, 16)



end event


event ObjectStartup

	// Load the sprite sheet
	// No need to setup sprite frames since the menu will handle them automatically
	LoadSpriteSheet("LevelSelect/Text.gif")

	// All Menu Control objects should be active
	// -> Note that there should only ever be one of them in a scene, though
	foreach (TypeName[Menu Control], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].priority = PRIORITY_ACTIVE
	next
	foreach (TypeName[Hex No], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].type = TypeName[Blank Object]
	next

	if stage.actNum < 3
		options.stageSelectFlag = true
	end if

	options.touchControls = 0

	SetMusicTrack("Options.ogg", 0, 1)

	// Setup menu 1 (left column)
	SetupMenu(MENU_1, 0, 3, 1)

	// Add the entries
	AddMenuEntry(MENU_1, "EMERALD HILL@@", 1)
	AddMenuEntry(MENU_1, "CHEMICAL PLANT", 1)
	AddMenuEntry(MENU_1, "AQUATIC RUIN@@", 1)
	AddMenuEntry(MENU_1, "CASINO NIGHT@@", 1)
	AddMenuEntry(MENU_1, "HILL TOP@@@@@@", 1)
	AddMenuEntry(MENU_1, "MYSTIC CAVE@@@", 1)
	AddMenuEntry(MENU_1, "OIL OCEAN@@@@@", 1)
	AddMenuEntry(MENU_1, "METROPOLIS@@@@", 1)
	AddMenuEntry(MENU_1, "WING FORTRESS ", 1)
	AddMenuEntry(MENU_1, "HIDDEN PALACE ", 1)



	menu1.selection = 0
	menu2.selection = -1

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
