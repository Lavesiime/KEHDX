// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Menu Control Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value0 : KEH.timer
private alias object.value1 : KEH.menusel

private alias object.value2 : KEH.usingTouch

// Padded out for parity with other Menu objects, so that the value slot is the same across each
private alias object.value10 : KEH.buttonLeft
private alias object.value11 : KEH.buttonTop
private alias object.value12 : KEH.buttonRight
private alias object.value13 : KEH.buttonBottom
private alias object.value14 : KEH.buttonID
private alias object.value15 : KEH.buttonFunc

// States
private alias 0 : OPTIONS_INIT
private alias 1 : OPTIONS_FADEIN
private alias 2 : OPTIONS_MAIN
private alias 3 : OPTIONS_EXIT

private alias saveRAM[200] : saved.radar
private alias saveRAM[201] : saved.radarstyle


// Function declarations
reserve function KEH_Button_Character
reserve function KEH_Button_Radar
reserve function KEH_Button_SoundTest
reserve function KEH_Button_MusicSwitch
reserve function KEH_Button_RadarStyle


function KEH_Button_Character
	saved.character++
	saved.character &= 1
	
	switch saved.character
	case 0
		EditMenuEntry(MENU_1, "KNUCKLES", 2, true)
		break
		
	case 1
		EditMenuEntry(MENU_1, "TIKAL", 2, true)
		break
		
	end switch
	
	WriteSaveRAM()
	
	KEH.menusel = MENUSEL_NULL
end function


function KEH_Button_Radar
	saved.radar++
	saved.radar &= 1
	
	switch saved.radar
	case 0
		EditMenuEntry(MENU_1, "@ON@", 8, true)
		break
		
	case 1
		EditMenuEntry(MENU_1, "OFF", 8, true)
		break
	end switch
	
	WriteSaveRAM()
	
	KEH.menusel = MENUSEL_NULL
end function


function KEH_Button_SoundTest
	KEH.menusel = MENUSEL_NULL
end function


function KEH_Button_MusicSwitch
	KEH.menusel = MENUSEL_NULL
end function


function KEH_Button_RadarStyle
	saved.radarstyle++
	saved.radarstyle %= 2
	
	switch saved.radarstyle
	case 0
		EditMenuEntry(MENU_1, "NEW", 26, true)
		break
		
	case 1
		EditMenuEntry(MENU_1, "OLD", 26, true)
		break
		
	end switch
	
	WriteSaveRAM()
	
	KEH.menusel = MENUSEL_NULL
end function

event ObjectMain
	
	switch object.state
	case OPTIONS_INIT
		KEH.timer = 320
		KEH.usingTouch = false
		
		tileLayer[1].scrollSpeed = -0x10000
		hParallax[0].scrollSpeed = -0x10000
		
		SetScreenFade(0, 0, 0, KEH.timer)
		object.state++
		break

	case OPTIONS_FADEIN
		if KEH.timer > 0
			KEH.timer -= 16
		else
			PlayMusic(0)
			object.state++
		end if
		
		SetScreenFade(0, 0, 0, KEH.timer)
		break

	case OPTIONS_MAIN
		if KEH.usingTouch == false
			KEH.menusel += inputpress.down
			KEH.menusel -= inputpress.up

			if KEH.menusel > 4
				KEH.menusel = 0
			end if

			if KEH.menusel < 0
				KEH.menusel = 4
			end if
			
			temp0 = inputpress.left
			temp0 |= inputpress.right
			
			if temp0 == true
				temp0 = KEH_Button_Character
				temp0 += KEH.menusel
				CallFunction(temp0)
			end if
			
			if inputPress.buttonB == true
				object.state = OPTIONS_EXIT
			end if
			
			CheckTouchRect(0, 0, screen.xsize, screen.ysize)
			if checkResult > -1
				// Activate touch controls, hide the Knuckles cursor
				KEH.usingTouch = true
				KEH.menusel = MENUSEL_NULL
			end if
		else
			CheckTouchRect(0, 0, screen.xsize, screen.ysize)
			temp3 = checkResult
			
			// Touch inputs, including the null buttons
			
			// Left bounds
			KEH.buttonLeft = screen.xcenter
			KEH.buttonLeft -= 149
			
			// Right bounds
			KEH.buttonRight = KEH.buttonLeft
			KEH.buttonRight += 300
			
			// Other values
			KEH.buttonTop = 3
			KEH.buttonBottom = 51
			KEH.buttonFunc = KEH_Button_Character
			
			// Cycle through, and look at all four buttons
			KEH.buttonID = 0
			while KEH.buttonID < 5
				CallFunction(KEH_RunButton)
				
				KEH.buttonTop += 48
				KEH.buttonBottom += 48
				KEH.buttonID++
				KEH.buttonFunc++
			loop
			
			// Check for the exit button
			CheckTouchRect(10, 190, 60, 220)
			
			if checkResult > -1
				KEH.menusel = 5
			else
				if temp3 < 0
					if KEH.menusel == 5
						object.state = OPTIONS_EXIT
						KEH.menusel = MENUSEL_NULL
					end if
				else
					if KEH.menusel == 5
						KEH.menusel = MENUSEL_NULL
					end if
				end if
			end if
			
			temp0 = inputPress.up
			temp0 |= inputPress.down
			temp0 |= inputPress.left
			temp0 |= inputPress.right
			temp0 |= inputPress.start
			temp0 |= inputPress.buttonA
			temp0 |= inputPress.buttonB
			temp0 |= inputPress.buttonC
			temp0 ^= true
			KEH.usingTouch = temp0
		end if
		
		menu1.selection = KEH.menusel
		menu1.selection *= 6
		menu1.selection += 2
		break
		
	case OPTIONS_EXIT
		if KEH.timer < 256
			music.volume -= 2
			KEH.timer += 8
			SetScreenFade(0, 0, 0, KEH.timer)
		else
			StopMusic()
			menu.bootMode = BOOTMODE_MAINMENU
			ResetObjectEntity(object.entityPos, TypeName[Main Menu], 0, object.xpos, object.ypos)
			SetScreenFade(0, 0, 0, 0xFF)
		end if
		break

	end switch
	
end event


event ObjectDraw
	
	// Draw the text
	temp0 = screen.xcenter
	DrawMenu(MENU_1, screen.xcenter, 12)
	
	SetActivePalette(3, 0, screen.ysize)
	
	// Now, draw all the yellow boxes
	temp1 = 3
	temp0 = 0
	while temp0 < 5
		DrawSpriteScreenXY(0, screen.xcenter, temp1)
		temp1 += 48
		temp0++
	loop
	
	// Find the position of the current selection, and draw a red box on top of there too
	temp1 = KEH.menusel
	temp1 *= 48
	temp1 += 3
	DrawSpriteScreenXY(1, screen.xcenter, temp1)
	
	if KEH.usingTouch == true
		// The arrows don't actually do or mean anything, but they help convey that the current option is selected
		DrawSpriteScreenXY(2, screen.xcenter, temp1)
		DrawSpriteScreenXY(3, screen.xcenter, temp1)
		
		// Back button
		checkEqual(KEH.menusel, 5)
		checkResult += 4
		DrawSpriteScreenXY(checkResult, 38, 202)
	end if
	
end event


event ObjectStartup

	// Load the sprite sheet
	LoadSpriteSheet("KEHMenu/Options.gif")
	
	// No need to setup sprite frames for the text since the menu system will handle them automatically
	
	SpriteFrame(-141, 0, 282, 42, 129, 1)   // 0 - Yellow box
	SpriteFrame(-141, 0, 282, 42, 129, 173) // 1 - Red box
	
	// Touch control Frames
	SpriteFrame(-175, 12, 20, 20, 162, 44) // 2 - Left, Blue
	SpriteFrame(165, 12, 20, 20, 183, 44)  // 3 - Right, Blue
	
	SpriteFrame(-20, -10, 40, 20, 204, 44)  // 4 - Blue left right arrow
	SpriteFrame(-20, -10, 40, 20, 204, 65)  // 5 - Red left right arrow
	
	// No Options objects are placed directly into the scene normally, 
//	foreach (TypeName[Options], arrayPos0, ALL_ENTITIES)
//		object[arrayPos0].priority = PRIORITY_ACTIVE
//	next
	
	LoadPalette("Options.act", 3, 0, 0, 256)

	if stage.actNum < 3
		options.stageSelectFlag = true
	end if

	options.touchControls = false

	SetMusicTrack("Options.ogg", 0, true)
	
	// Setup menu 1 (left column)
	SetupMenu(MENU_1, 0, 1, 2)

	// Add the entries
	AddMenuEntry(MENU_1, "*@@PLAYER SELECT@@*", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "KNUCKLES", true)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "*@@RADAR@@*", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@ON@", true)
	AddMenuEntry(MENU_1, "@@@@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "*@@SOUND TEST@@*", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "NOT AVAILABLE", true)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "*@@MUSIC SWITCH@@*", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "NOT AVAILABLE", true)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "*@@RADAR SPRITES@@*", false)
	AddMenuEntry(MENU_1, "@", false)
	AddMenuEntry(MENU_1, "NEW", true)

	menu1.selection = 2
	menu2.selection = -1

	switch saved.character
	case 0
		EditMenuEntry(MENU_1, "KNUCKLES", 2, true)
		break
	case 1
		EditMenuEntry(MENU_1, "TIKAL", 2, true)
		break
	end switch

	switch saved.radar
	case 0
		EditMenuEntry(MENU_1, "@ON@", 8, true)
		break
	case 1
		EditMenuEntry(MENU_1, "OFF", 8, true)
		break
	end switch

	switch saved.radarstyle
	case 0
		EditMenuEntry(MENU_1, "NEW", 26, true)
		break
	case 1
		EditMenuEntry(MENU_1, "OLD", 26, true)
		break
	end switch

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("KEHMenu/Options.gif")
	SpriteFrame(0, 0, 32, 128, 129, 44)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
