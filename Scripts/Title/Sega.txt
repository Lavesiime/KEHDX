// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Sega Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 1 : TYPE_SEGA

private alias object.value0 : sega.fadeValue
private alias object.value2 : sega.spriteCounter
private alias object.value3 : sega.LSelCheat
private alias object.value4 : sega.anyCheatDone
private alias object.value5 : sega.reigonCheat

public alias saveRAM[202] : saved.character

// Menu Boot Mode Aliases
// Public since the following Menu-related objects use them too
public alias 0 : BOOTMODE_NONE
public alias 1 : BOOTMODE_MAINMENU
public alias 2 : BOOTMODE_OPTIONS
public alias 3 : BOOTMODE_STAGESELECT


event ObjectMain

	if inputPress.start == true
		if object.state < 6
			object.state = 7
		end if
	end if

	switch object.state
	case 0
		object.alpha = 0
		object.inkEffect = INK_ALPHA
		sega.fadeValue = 320
		SetActivePalette(0, 0, screen.ysize)
		SetScreenFade(0, 0, 0, sega.fadeValue)
		object.state++
		break
	case 1
		if sega.fadeValue > 0
			sega.fadeValue -= 8
		else
			object.direction = FLIP_X
			object.alpha = 256
			sega.spriteCounter = 256
			object.state++
		end if
		SetScreenFade(0, 0, 0, sega.fadeValue)
		break
	case 2
		object.frame++
		object.frame &= 3
		if sega.spriteCounter > -320
			sega.spriteCounter -= 32
		else
			object.direction = FLIP_NONE
			object.state++
		end if
		break
	case 3
		if object.alpha > -64
			object.alpha -= 16
		else
			object.state++
		end if
		break
	case 4
		object.frame++
		object.frame &= 3
		if sega.spriteCounter < 320
			sega.spriteCounter += 32
		else
			object.alpha = 256
			object.state++
		end if
		break
	case 5
		if object.alpha > -64
			object.alpha -= 16
		else
			object.state++
		end if
		break
	case 6
		sega.fadeValue++
		if sega.fadeValue == 160
			sega.fadeValue = 0
			object.state = 7
		end if
		if sega.fadeValue == 2
			switch saved.character 
			case 0
				PlaySfx(SfxName[Sega Chant], 0)
				break
			case 1
				PlaySfx(SfxName[Tikal Chant], 0)
				break
			end switch
		end if
		temp0 = screen.xcenter
		temp0 -= 50
		temp1 = temp0
		temp1 += 42
		CheckTouchRect(temp0, 90, temp1, 150)
		if checkResult > -1
			specialMode = 1
		end if
		break
	case 7
		if sega.fadeValue < 256
			sega.fadeValue += 8
			SetScreenFade(0, 0, 0, sega.fadeValue)
		else
			ResetObjectEntity(object.entityPos, TypeName[SHC Splash], 0, object.xpos, object.ypos)
			SetScreenFade(0, 0, 0, 255)
		end if
		break
	end switch
end event


event ObjectDraw
	DrawRect(0, 0, screen.xsize, screen.ysize, 224, 224, 224, 255)
	switch object.state
	case 2
		temp0 = sega.spriteCounter
		temp0 += screen.xcenter
		DrawSpriteScreenFX(4, FX_FLIP, temp0, 121)
		DrawSpriteScreenFX(5, FX_FLIP, temp0, 121)
		DrawSpriteScreenFX(6, FX_FLIP, temp0, 121)
		DrawSpriteScreenFX(object.frame, FX_FLIP, temp0, screen.ycenter)
		break
	case 3
		DrawSpriteScreenFX(7, FX_INK, 0, 121)
		DrawSpriteScreenFX(8, FX_INK, 0, 121)
		DrawSpriteScreenFX(9, FX_INK, 0, 121)
		temp0 = object.alpha
		object.alpha = 256
		object.alpha -= temp0
		DrawSpriteScreenFX(10, FX_INK, screen.xcenter, screen.ycenter)
		object.alpha = temp0
		break
	case 4
		temp0 = sega.spriteCounter
		temp0 += screen.xcenter
		DrawSpriteScreenFX(4, FX_FLIP, temp0, 120)
		DrawSpriteScreenFX(5, FX_FLIP, temp0, 120)
		DrawSpriteScreenFX(6, FX_FLIP, temp0, 120)
		DrawSpriteScreenXY(10, screen.xcenter, screen.ycenter)
		DrawSpriteScreenFX(object.frame, FX_FLIP, temp0, screen.ycenter)
		break
	case 5
		DrawSpriteScreenFX(7, FX_INK, 0, 120)
		DrawSpriteScreenFX(8, FX_INK, 0, 120)
		DrawSpriteScreenFX(9, FX_INK, 0, 120)
		DrawSpriteScreenXY(11, screen.xcenter, screen.ycenter)
		break
	case 6
	case 7
		DrawSpriteScreenXY(11, screen.xcenter, screen.ycenter)
		
		if specialMode == 1
			temp0 = screen.xcenter
			temp0 -= 93
			DrawRect(temp0, 90, 42, 60, 224, 224, 224, 255)
			temp0 = screen.xcenter
			temp0 -= 6
			DrawRect(temp0, 90, 100, 60, 224, 224, 224, 255)
		end if
		break
	end switch
end event


event ObjectStartup
	LoadSpriteSheet("KEHMenu/SEGA.gif")
	
	if saved.character == 0
		//Knuckles
		SpriteFrame(-31, -36, 62, 72, 1, 226)
		SpriteFrame(-31, -36, 62, 72, 64, 226)
		SpriteFrame(-29, -36, 60, 72, 127, 226)
		SpriteFrame(-31, -36, 62, 72, 188, 226)
	else
		//Tikal
		SpriteFrame(-31, -36, 62, 72, 1, 153)
		SpriteFrame(-31, -36, 62, 72, 64, 153)
		SpriteFrame(-29, -36, 60, 72, 127, 153)
		SpriteFrame(-31, -36, 62, 72, 188, 153)
	end if
	
	//SEGA
	SpriteFrame(-192, -35, 256, 70, 1, 299)
	SpriteFrame(-384, -35, 192, 70, 1, 299)
	SpriteFrame(-576, -35, 192, 70, 1, 299)
	SpriteFrame(0, -35, 192, 70, 1, 299)
	SpriteFrame(192, -35, 192, 70, 1, 299)
	SpriteFrame(384, -35, 192, 70, 1, 299)
	SpriteFrame(-93, -29, 187, 58, 323, 297)
	SpriteFrame(-93, -29, 187, 58, 323, 238)

	// Hide Touch Controls
	options.touchControls = false
	
	temp0 = 0
	
	switch menu.bootMode
	case BOOTMODE_NONE
		// Nothing special needed here, player just booted up the game so give them all the splashes
		break
	case BOOTMODE_STAGESELECT
		temp0++
	case BOOTMODE_OPTIONS
		temp0++
	case BOOTMODE_MAINMENU
		temp0 += 2
		
		if temp0 > 0
			foreach (TypeName[Sega], arrayPos0, ALL_ENTITIES)
				object[arrayPos0].type = temp0
				object[arrayPos0].priority = 1 // "PRIORITY_ACTIVE", actual name varies across decomp versions so numeric ID is used here instead
			next
		end if
		break
	end switch
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
