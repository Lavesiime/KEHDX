// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Stage Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases

private alias object.visible : player.visible
private alias object.value18 : player.sortedDrawOrder
private alias object.value20 : pause.KEH
private alias object.value21 : player.nodraw

// Menu Boot Mode Aliases
private alias 3 : BOOTMODE_STAGESELECT


event ObjectMain
	switch stage.state
	case STAGE_PAUSED
		switch pause.KEH
		case 0
			pause.KEH = 1
			break
		case 1
			if inputPress.up == 1
				object.value0--
				if object.value0 == -1
					object.value0 = 2
				end if
				PlaySfx(SfxName[Menu Move], 0)
			end if
			if inputPress.down == 1
				object.value0++
				if object.value0 == 3
					object.value0 = 0
				end if
				PlaySfx(SfxName[Menu Move], 0)
			end if
			if inputPress.start == 1
				PlaySfx(SfxName[Menu Back], 0)
				stage.state = STAGE_RUNNING
				ResumeMusic()
			end if
			temp0 = inputPress.buttonA
			temp0 |= inputPress.buttonB
			temp0 |= inputPress.buttonC
			if temp0 == 1
				switch object.value0
				case 0
					PlaySfx(SfxName[Menu Back], 0)
					stage.state = STAGE_RUNNING
					player.nodraw = 0
					ResumeMusic()
					break
				case 1
					PlaySfx(SfxName[Menu Select], 0)
					LoadStage()
					break
				case 2
					PlaySfx(SfxName[Menu Select], 0)
					stage.activeList = PRESENTATION_STAGE
					stage.listPos = 0
					menu.bootMode = BOOTMODE_STAGESELECT
					LoadStage()
					break
				end switch
			end if
			break
		end switch
		break
	case STAGE_FROZEN
		// Do nothing
		break
	default
		pause.KEH = 0

	end switch

		// Sort players, player 1 should always be on top of player 2
		currentPlayer = playerCount
		currentPlayer--
		while currentPlayer > -1
			if player[currentPlayer].visible == true
				currentPlayer += playerCount
				if player[currentPlayer].sortedDrawOrder == 0
					currentPlayer -= playerCount
					arrayPos0 = player[currentPlayer].sortedDrawOrder
					AddDrawListEntityRef(arrayPos0, currentPlayer)
	
					currentPlayer += playerCount
					AddDrawListEntityRef(arrayPos0, currentPlayer)
					currentPlayer -= playerCount
				else
					currentPlayer -= playerCount
					arrayPos0 = player[currentPlayer].sortedDrawOrder
					currentPlayer += playerCount
					AddDrawListEntityRef(arrayPos0, currentPlayer)
	
					currentPlayer -= playerCount
					arrayPos0 = player[currentPlayer].sortedDrawOrder
					AddDrawListEntityRef(arrayPos0, currentPlayer)
				end if
			end if
			currentPlayer--
		loop

	// Handle Touch Controls
	if options.attractMode == false
		if object[0].controlMode > -1
			options.touchControls = true
		else
			options.touchControls = false
		end if
	else
		options.touchControls = false
	end if
end event

event ObjectDraw
	if stage.state == STAGE_PAUSED
		temp0 = screen.xsize
		temp0 /= 2
		temp1 = screen.ysize
		temp1 /= 2
		DrawSpriteScreenXY(0, temp0, temp1)
		DrawSpriteScreenFX(1, FX_INK, temp0, temp1)
		temp2 = 2
		if object.value0 == 0
			temp2++
		end if
		DrawSpriteScreenXY(temp2, temp0, temp1)
		temp2 = 4
		if object.value0 == 1
			temp2++
		end if
		DrawSpriteScreenXY(temp2, temp0, temp1)
		temp2 = 6
		if object.value0 == 2
			temp2++
		end if
		DrawSpriteScreenXY(temp2, temp0, temp1)
	end if
end event

event ObjectStartup
	tileLayer[0].type = 3
	object[8].type = TypeName[Stage Setup]
	object[8].priority = PRIORITY_ACTIVE_PAUSED
	object[8].drawOrder = 6
	object[8].inkEffect = INK_ALPHA
	object[8].alpha = 0x40

	//object[9].type 			= TypeName[HUD]
	object[9].priority 		= PRIORITY_ACTIVE
	object[9].drawOrder 	= 6

	LoadSpriteSheet("Global/Display.gif")

	// Pause menu
	SpriteFrame(-40, -22, 81, 45, 137, 413)	// 0  - Frame
	SpriteFrame(-36, -18, 73, 37, 137, 459)	// 1  - Inner
	SpriteFrame(-32, -14, 64, 7, 137, 389)	// 2  - Continue
	SpriteFrame(-32, -14, 64, 7, 170, 405)	// 3  - Continue (Sel)
	SpriteFrame(-28, -3, 56, 7, 137, 397)	// 4  - Restart
	SpriteFrame(-28, -3, 56, 7, 194, 397)	// 5  - Restart (Sel)
	SpriteFrame(-16, 8, 32, 7, 137, 405)	// 6  - Exit
	SpriteFrame(-16, 8, 32, 7, 202, 389)	// 7  - Exit (Sel)

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event