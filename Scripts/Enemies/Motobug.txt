// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Motobug Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 58 : TYPE_MOTOBUG

private alias object.value0 : object.timer
private alias object.value1 : object.mainX
private alias object.value2 : object.mainY
private alias object.value3 : object.exhaustTimer

private alias 0 : STATE_MOVING
private alias 1 : STATE_PAUSED

private alias 0 : ANI_MOVING
private alias 1 : ANI_PAUSED

// Function declarations
reserve function Motobug_DebugDraw
reserve function Motobug_DebugSpawn

function Motobug_DebugDraw
	DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
end function


function Motobug_DebugSpawn

	CreateTempObject(TypeName[Motobug], 0, object.xpos, object.ypos)

	GetBit(temp0, object.direction, 0)

	if temp0 == false
		object[tempObjectPos].direction = FLIP_NONE
		object[tempObjectPos].xvel = -0x10000
	else
		object[tempObjectPos].direction = FLIP_X
		object[tempObjectPos].xvel = 0x10000
	end if

end function


event ObjectMain

	switch object.state
	case STATE_MOVING
		object.priority = PRIORITY_ACTIVE

		object.xpos += object.xvel

		// Check object collision
		ObjectTileGrip(CSIDE_FLOOR, 0, 15, 0)
		if checkResult == false
			// If on the edge, then pause to turn around
			object.state = STATE_PAUSED
			object.animation = ANI_PAUSED
		end if


		// Update exhaust process
		if object.exhaustTimer < 20
			object.exhaustTimer++
		else

			object.exhaustTimer = 0

			// Create the exhaust object
			CreateTempObject(TypeName[Motobug Exhaust], 0, object.xpos, object.ypos)
			
			// Offset the exhaust based on the Motobug's direction
			if object.direction == FLIP_NONE
				object[tempObjectPos].xpos += 0x160000
			else
				object[tempObjectPos].xpos -= 0x160000
			end if

			// Set the object to match the Motobug's direction
			object[tempObjectPos].direction = object.direction

		end if
		break

	case STATE_PAUSED
		if object.timer < 59
			// Stay still for a moment...
			object.timer++
		else
			// Start moving again
			object.timer = 0

			object.state = STATE_MOVING
			object.animation = ANI_MOVING

			// Flip the Motobug
			object.direction ^= FLIP_X
			FlipSign(object.xvel)
		end if
		break

	end switch

	if object.outOfBounds == true

		temp0 = object.xpos
		temp1 = object.ypos

		object.xpos = object.mainX
		object.ypos = object.mainY

		if object.outOfBounds == true

			if object.propertyValue == 0
				object.direction = FLIP_NONE
				object.xvel = -0x10000
			else
				object.direction = FLIP_X
				object.xvel = 0x10000
			end if

			object.animation = ANI_MOVING
			object.priority = PRIORITY_ACTIVE_BOUNDS
			object.state = STATE_MOVING

		else
			object.xpos = temp0
			object.ypos = temp1
		end if

	end if

	// Check collision with players
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		BoxCollisionTest(C_TOUCH, object.entityPos, -14, -14, 14, 14, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
		if checkResult == true
			CallFunction(PlayerObject_BadnikBreak)
			if object.type == TypeName[Blank Object]
				CallFunction(EmeraldManager_AwardEmerald)
			end if
		end if
	next

	if object.animation == ANI_MOVING
		object.frame = object.animationTimer
		object.frame >>= 3
		object.animationTimer++
		object.animationTimer &= 31
	end if
	
end event


event ObjectDraw
	DrawSpriteFX(object.frame, FX_FLIP, object.xpos, object.ypos)
end event


event ObjectStartup
	
	// Check which sprites to load based on current folder
	CheckCurrentStageFolder("GHZ")
	if checkResult == true
		LoadSpriteSheet("GHZ/Objects.gif")
		SpriteFrame(-21, -13, 40, 28, 98, 127)
		SpriteFrame(-20, -14, 39, 29, 139, 127)
		SpriteFrame(-20, -13, 39, 28, 98, 156)
		SpriteFrame(-20, -14, 39, 29, 139, 127)
	end if

	// Setup all Motobugs
	foreach (TypeName[Motobug], arrayPos0, ALL_ENTITIES)

		// Set their base positions
		object[arrayPos0].mainX = object[arrayPos0].xpos
		object[arrayPos0].mainY = object[arrayPos0].ypos

		// Set their direction based on their propertyValue
		if object[arrayPos0].propertyValue == 0
			object[arrayPos0].direction = FLIP_NONE
			object[arrayPos0].xvel = -0x10000
		else
			object[arrayPos0].direction = FLIP_X
			object[arrayPos0].xvel = 0x10000
		end if
		CallFunction(EmeraldManager_AddEntity)
	next

	// Add Motobug to the debug item list
	SetTableValue(TypeName[Motobug], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(Motobug_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(Motobug_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
