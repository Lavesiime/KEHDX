// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Menu Control Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================
private alias object.value0 : object.timer
private alias object.value1 : object.scrollDelayUp
private alias object.value2 : object.scrollDelayDown
private alias object.value3 : object.currentSelection
private alias object.value4 : object.soundTestCooldown

private alias object.value0 : hexNo.number
private alias object.value1 : hexNo.highlighted

private alias 0 : MENUCONTROL_INIT
private alias 1 : MENUCONTROL_FADEIN
private alias 2 : MENUCONTROL_MAIN
private alias 3 : MENUCONTROL_LOADLEVEL
private alias 4 : MENUCONTROL_LOADSPECIAL

// The maximum number of selections available
// (Inclusive limit)
private alias 9 : MAX_SELECTION_COUNT

// Music Loops
private alias 152750 : MUSIC_LOOP_EHZ_1P
private alias 18671  : MUSIC_LOOP_MCZ_2P // This is 18672 in some other cases...
private alias 293572 : MUSIC_LOOP_OOZ
private alias 309378 : MUSIC_LOOP_MPZ
private alias 1      : MUSIC_LOOP_HTZ
private alias 1      : MUSIC_LOOP_ARZ
private alias 95868  : MUSIC_LOOP_CNZ_2P
private alias 62820  : MUSIC_LOOP_CNZ_1P
private alias 1      : MUSIC_LOOP_DEZ
private alias 99356  : MUSIC_LOOP_MCZ_1P
private alias 99572  : MUSIC_LOOP_EHZ_2P
private alias 198253 : MUSIC_LOOP_SCZ
private alias 684580 : MUSIC_LOOP_CPZ
private alias 99874  : MUSIC_LOOP_WFZ
private alias 59852  : MUSIC_LOOP_PPZ
private alias 496644 : MUSIC_LOOP_SPECIAL
private alias 38679  : MUSIC_LOOP_INV


// ========================
// Static Values
// ========================
public value MenuControl_optionsMenuOpen		= 0
private value MenuControl_optionsMenuCounter 	= 0
private value MenuControl_debugModeCounter 		= 0
private value MenuControl_emeraldCodeCounter 	= 0
private value MenuControl_continueCodeCounter 	= 0
private value MenuControl_PPZCodeCounter 		= 0

// ========================
// Tables
// ========================

// Code to open the game config menu
private table MenuControl_OptionsMenu
	0, 0, 0
end table

// Code to enable debug mode
private table MenuControl_SecretDebugMode
	1, 9, 9, 2, 1, 1, 2, 4
end table

// Code to give all emeralds
private table MenuControl_SecretEmeralds
	4, 1, 2, 6
end table

// Code to give 14 continues
private table MenuControl_SecretContinues
	1, 1, 2, 4
end table

// Code to replace Hidden Palace Zone with Proto Palace Zone
private table MenuControl_SecretPPZ
	3, 3, 3, 11, 16, 16, 16, 4
end table


// This table holds data for every stage with six values for every stage, 
// -> First entry is menu table the stage option is on
// -> Second is what number this one is on the list, from top to bottom
// -> Third is the active stage list the stage is on
// -> Fourth is the stage's position in the stage list
// -> Fifth is the menu entry of what is on the opposite side of this selection, like how MTZ is to the right of EHZ and vice versa
// -> Sixth is the icon the entry uses

private table MenuControl_EntryTable
	0, 0, 1, 0, 14, 1  // Emerald Hill 1
	0, 1, 1, 1, 17, 2  // Emerald Hill 2
	0, 2, 1, 2, 18, 3  // Chemical Plant 1
	0, 3, 1, 3, 19, 4  // Chemical Plant 2
	0, 4, 1, 4, 20, 5  // Aquatic Ruin 1
	0, 5, 1, 5, 21, 6  // Aquatic Ruin 2
	0, 6, 1, 6, 22, 8  // Casino Night 1
	0, 7, 1, 7, 23, 9  // Casino Night 2
	0, 8, 1, 8, 24, 11 // Hill Top 1
	0, 9, 1, 9, 25, 7  // Hill Top 2
end table


// ========================
// Events
// ========================

event ObjectUpdate
	// Setup the HexNo object
	object[+1].xpos = screen.xcenter
	object[+1].xpos += 118

	switch object.state
	case MENUCONTROL_INIT
		object.timer = 320
		SetScreenFade(0, 0, 0, object.timer)
		object[+1].ypos = 160
		object[+1].priority = PRIORITY_ACTIVE
		object.state++
		break

	case MENUCONTROL_FADEIN
		if object.timer > 0
			object.timer -= 16
		else
			PlayMusic(0)
			object.state++
		end if
		SetScreenFade(0, 0, 0, object.timer)
		break

	case MENUCONTROL_MAIN
		// Don't do any of this if the options menu is open
		if MenuControl_optionsMenuOpen == false
			if keyDown[0].down == true
				object.scrollDelayUp = 0
				object.scrollDelayDown++
				if object.scrollDelayDown == 1
					object.currentSelection++
				end if

				object.scrollDelayDown %= 12
			else
				if keyDown[0].up == true
					object.scrollDelayDown = 0
					object.scrollDelayUp++
					if object.scrollDelayUp == 1
						object.currentSelection--
					end if

					object.scrollDelayUp %= 12
				else
					object.scrollDelayUp = 0
					object.scrollDelayDown = 0
				end if
			end if

			if object.currentSelection > MAX_SELECTION_COUNT
				object.currentSelection = 0
			end if

			if object.currentSelection < 0
				object.currentSelection = MAX_SELECTION_COUNT
			end if

			temp0 = object.currentSelection
			temp0 *= 6
			temp0++
			GetTableValue(temp2, temp0, MenuControl_EntryTable)
			temp0 += 3
			GetTableValue(temp1, temp0, MenuControl_EntryTable)

			temp0 = object.currentSelection
			temp0 *= 6
			GetTableValue(temp1, temp0, MenuControl_EntryTable)
			temp0++

			if temp1 == MENU_1
				menu2.selection = -1
				GetTableValue(menu1.selection, temp0, MenuControl_EntryTable)
			else // MENU_2
				menu1.selection = -1
				GetTableValue(menu2.selection, temp0, MenuControl_EntryTable)
			end if

			// Set the preview image to what it should be
			temp0 += 4
			GetTableValue(BGAnimation_currentPreview, temp0, MenuControl_EntryTable)

			// Player selected the option?
			if keyPress[0].start == true
				object.state = MENUCONTROL_LOADLEVEL
			end if
		end if
		break

	case MENUCONTROL_LOADLEVEL
		if object.timer < 256
			music.volume -= 10
			object.timer += 16
			SetScreenFade(0, 0, 0, object.timer)
		else
#platform: USE_ORIGINS
			CallNativeFunction2(NotifyCallback, NOTIFY_LEVEL_SELECT_MENU, 1)
			CallNativeFunction4(NotifyCallback, NOTIFY_PLAYER_SET, stage.playerListPos, stage.player2Enabled, 0)
#endplatform

			StopMusic()
			temp0 = object.currentSelection
			temp0 *= 6
			temp0 += 2
			GetTableValue(temp1, temp0, MenuControl_EntryTable)
			temp0++
			GetTableValue(temp2, temp0, MenuControl_EntryTable)
			stage.activeList = temp1
			stage.listPos = temp2
			LoadStage()
			SetScreenFade(0x00, 0x00, 0x00, 0xFF)
		end if
		break

	case MENUCONTROL_LOADSPECIAL
		if object.timer < 768
			music.volume -= 10
			object.timer += 8
			SetScreenFade(0xD0, 0xFF, 0xE0, object.timer)
		else
			StopMusic()
			temp0 = object.currentSelection
			temp0 *= 6
			temp0 += 2
			GetTableValue(temp1, temp0, MenuControl_EntryTable)
			temp0++
			GetTableValue(temp2, temp0, MenuControl_EntryTable)
			stage.activeList = temp1
			stage.listPos = temp2
			LoadStage()
			SetScreenFade(0xD0, 0xFF, 0xE0, 0xFF)
		end if
		break
	end switch
end event


event ObjectDraw
	temp0 = screen.xcenter
	temp0 += 60
	DrawMenu(MENU_1, temp0, 16)
end event


event ObjectStartup
	// Load the sprite sheet
	// No need to setup sprite frames since using the menu system will handle them automatically
	LoadSpriteSheet("LevelSelect/Text.gif")

	// All Menu Control objects should be active
	// -> Note that there should only ever be one of them in a scene, though
	foreach (TypeName[Menu Control], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].priority = PRIORITY_ACTIVE
	next

#platform: USE_STANDALONE
	if stage.actNum < 3
		options.stageSelectFlag = true
	end if
#endplatform

	options.touchControls = false

	SetMusicTrack("Options.ogg", 0, true)

	// Setup menu 1 (left column)
	SetupMenu(MENU_1, 0, 3, 1)

	// Add the entries
	AddMenuEntry(MENU_1, "EMERALD HILL@@", 1)
	AddMenuEntry(MENU_1, "CHEMICAL PLANT", 1)
	AddMenuEntry(MENU_1, "AQUATIC RUIN@@", 1)
	AddMenuEntry(MENU_1, "CASINO NIGHT@@", 1)
	AddMenuEntry(MENU_1, "HILL TOP@@@@@@", 1)
	AddMenuEntry(MENU_1, "MYSTIC CAVE@@@", 1)
	AddMenuEntry(MENU_1, "OIL OCEAN@@@@@", 1)
	AddMenuEntry(MENU_1, "METROPOLIS@@@@", 1)
	AddMenuEntry(MENU_1, "WING FORTRESS ", 1)
	AddMenuEntry(MENU_1, "HIDDEN PALACE ", 1)
	
	menu1.selection = 0
	menu2.selection = -1
end event


event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
